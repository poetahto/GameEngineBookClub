asset pipeline:

(offline)
assets are imported from raw files (.png, .fbx, ect.) and have their import settings set (name, unique id, filtering, compression, ect.)

types of assets:
- texture (format, data)
- shader (just the raw source files)
- material (shader, shader properties)
- model (submesh-material pairs)
- scene (blob of entity data?)
- prefab (blob of entity data?)

later:
- audio
- animations

individual files are compiled into one (or several?) asset banks that can be loaded at runtime, which contain logical groupings of all assets that are needed for the game to run (each indiviual asset must have a unique id, which is hashed on an asset name and uses the same hashing algorithm as the engine)

(runtime)
assets are loaded by hashed string values, user defined literals hashing the string at compile time

before assets can be loaded, the bank that contains them must be loaded